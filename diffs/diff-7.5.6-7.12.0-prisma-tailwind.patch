diff --git a/.eslintrc.cjs b/.eslintrc.cjs
index db7fda4..8b7a0e8 100644
--- a/.eslintrc.cjs
+++ b/.eslintrc.cjs
@@ -1,5 +1,8 @@
+// eslint-disable-next-line @typescript-eslint/no-var-requires
+const path = require("path");
+
 /** @type {import("eslint").Linter.Config} */
-module.exports = {
+const config = {
   overrides: [
     {
       extends: [
@@ -7,13 +10,13 @@ module.exports = {
       ],
       files: ["*.ts", "*.tsx"],
       parserOptions: {
-        project: "tsconfig.json",
+        project: path.join(__dirname, "tsconfig.json"),
       },
     },
   ],
   parser: "@typescript-eslint/parser",
   parserOptions: {
-    project: "./tsconfig.json",
+    project: path.join(__dirname, "tsconfig.json"),
   },
   plugins: ["@typescript-eslint"],
   extends: ["next/core-web-vitals", "plugin:@typescript-eslint/recommended"],
@@ -25,5 +28,8 @@ module.exports = {
         fixStyle: "inline-type-imports",
       },
     ],
+    "@typescript-eslint/no-unused-vars": ["warn", { argsIgnorePattern: "^_" }],
   },
 };
+
+module.exports = config;
diff --git a/next.config.mjs b/next.config.mjs
index d7dfb79..d921057 100644
--- a/next.config.mjs
+++ b/next.config.mjs
@@ -1,18 +1,16 @@
-// @ts-check
-
 /**
- * Run `build` or `dev` with `SKIP_ENV_VALIDATION` to skip env validation.
- * This is especially useful for Docker builds.
+ * Run `build` or `dev` with `SKIP_ENV_VALIDATION` to skip env validation. This is especially useful
+ * for Docker builds.
  */
-!process.env.SKIP_ENV_VALIDATION && (await import("./src/env.mjs"));
+await import("./src/env.mjs");
 
 /** @type {import("next").NextConfig} */
 const config = {
   reactStrictMode: true,
 
   /**
-   * If you have the "experimental: { appDir: true }" setting enabled, then you
-   * must comment the below `i18n` config out.
+   * If you have `experimental: { appDir: true }` set, then you must comment the below `i18n` config
+   * out.
    *
    * @see https://github.com/vercel/next.js/issues/41980
    */
diff --git a/package.json b/package.json
index d10d5eb..05473ee 100644
--- a/package.json
+++ b/package.json
@@ -1,5 +1,5 @@
 {
-  "name": "current",
+  "name": "upgrade",
   "version": "0.1.0",
   "private": true,
   "scripts": {
@@ -10,31 +10,31 @@
     "start": "next start"
   },
   "dependencies": {
-    "@prisma/client": "^4.9.0",
-    "next": "13.1.6",
+    "@prisma/client": "^4.11.0",
+    "next": "^13.2.4",
     "react": "18.2.0",
     "react-dom": "18.2.0",
-    "zod": "^3.20.2"
+    "zod": "^3.21.4"
   },
   "devDependencies": {
-    "@types/eslint": "^8.21.1",
-    "@types/node": "^18.11.18",
+    "@types/eslint": "^8.21.3",
+    "@types/node": "^18.15.5",
     "@types/prettier": "^2.7.2",
-    "@types/react": "^18.0.26",
-    "@types/react-dom": "^18.0.10",
-    "@typescript-eslint/eslint-plugin": "^5.47.1",
-    "@typescript-eslint/parser": "^5.47.1",
-    "autoprefixer": "^10.4.7",
-    "eslint": "^8.30.0",
-    "eslint-config-next": "13.1.6",
-    "postcss": "^8.4.14",
-    "prettier": "^2.8.1",
-    "prettier-plugin-tailwindcss": "^0.2.1",
-    "prisma": "^4.9.0",
-    "tailwindcss": "^3.2.0",
-    "typescript": "^4.9.4"
+    "@types/react": "^18.0.28",
+    "@types/react-dom": "^18.0.11",
+    "@typescript-eslint/eslint-plugin": "^5.56.0",
+    "@typescript-eslint/parser": "^5.56.0",
+    "autoprefixer": "^10.4.14",
+    "eslint": "^8.36.0",
+    "eslint-config-next": "^13.2.4",
+    "postcss": "^8.4.21",
+    "prettier": "^2.8.6",
+    "prettier-plugin-tailwindcss": "^0.2.6",
+    "prisma": "^4.11.0",
+    "tailwindcss": "^3.3.0",
+    "typescript": "^5.0.2"
   },
   "ct3aMetadata": {
-    "initVersion": "7.5.6"
+    "initVersion": "7.12.0"
   }
 }
diff --git a/postcss.config.cjs b/postcss.config.cjs
index 12a703d..e305dd9 100644
--- a/postcss.config.cjs
+++ b/postcss.config.cjs
@@ -1,6 +1,8 @@
-module.exports = {
+const config = {
   plugins: {
     tailwindcss: {},
     autoprefixer: {},
   },
 };
+
+module.exports = config;
diff --git a/prettier.config.cjs b/prettier.config.cjs
index 58b0aee..ca28ed9 100644
--- a/prettier.config.cjs
+++ b/prettier.config.cjs
@@ -1,4 +1,6 @@
 /** @type {import("prettier").Config} */
-module.exports = {
+const config = {
   plugins: [require.resolve("prettier-plugin-tailwindcss")],
 };
+
+module.exports = config;
diff --git a/public/favicon.ico b/public/favicon.ico
index efd76f1..60c702a 100644
Binary files a/public/favicon.ico and b/public/favicon.ico differ
diff --git a/src/env.mjs b/src/env.mjs
index 126943c..05eb654 100644
--- a/src/env.mjs
+++ b/src/env.mjs
@@ -13,9 +13,13 @@ const server = z.object({
  * Specify your client-side environment variables schema here. This way you can ensure the app isn't
  * built with invalid env vars. To expose them to the client, prefix them with `NEXT_PUBLIC_`.
  */
-const client = z.object({
-  // NEXT_PUBLIC_CLIENTVAR: z.string().min(1),
-});
+const client = z.object(
+  /** @satisfies {Record<`NEXT_PUBLIC_${string}`, import('zod').ZodType>} */ (
+    {
+      // NEXT_PUBLIC_CLIENTVAR: z.string().min(1),
+    }
+  ),
+);
 
 /**
  * You can't destruct `process.env` as a regular object in the Next.js edge runtimes (e.g.
@@ -40,7 +44,11 @@ const merged = server.merge(client);
 
 let env = /** @type {MergedOutput} */ (process.env);
 
-if (!!process.env.SKIP_ENV_VALIDATION == false) {
+const skip =
+  !!process.env.SKIP_ENV_VALIDATION &&
+  process.env.SKIP_ENV_VALIDATION !== "false" &&
+  process.env.SKIP_ENV_VALIDATION !== "0";
+if (!skip) {
   const isServer = typeof window === "undefined";
 
   const parsed = /** @type {MergedSafeParseReturn} */ (
diff --git a/src/server/db.ts b/src/server/db.ts
index f3d7be3..861093d 100644
--- a/src/server/db.ts
+++ b/src/server/db.ts
@@ -2,10 +2,12 @@ import { PrismaClient } from "@prisma/client";
 
 import { env } from "~/env.mjs";
 
-const globalForPrisma = globalThis as unknown as { prisma: PrismaClient };
+const globalForPrisma = globalThis as unknown as {
+  prisma: PrismaClient | undefined;
+};
 
 export const prisma =
-  globalForPrisma.prisma ||
+  globalForPrisma.prisma ??
   new PrismaClient({
     log:
       env.NODE_ENV === "development" ? ["query", "error", "warn"] : ["error"],
diff --git a/tailwind.config.cjs b/tailwind.config.ts
similarity index 52%
rename from tailwind.config.cjs
rename to tailwind.config.ts
index 54331dc..d4d3fa2 100644
--- a/tailwind.config.cjs
+++ b/tailwind.config.ts
@@ -1,8 +1,9 @@
-/** @type {import('tailwindcss').Config} */
-module.exports = {
+import { type Config } from "tailwindcss";
+
+export default {
   content: ["./src/**/*.{js,ts,jsx,tsx}"],
   theme: {
     extend: {},
   },
   plugins: [],
-};
+} satisfies Config;
