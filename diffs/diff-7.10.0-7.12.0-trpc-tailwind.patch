diff --git a/next.config.mjs b/next.config.mjs
index f9b4e26..d921057 100644
--- a/next.config.mjs
+++ b/next.config.mjs
@@ -1,16 +1,16 @@
 /**
- * Run `build` or `dev` with `SKIP_ENV_VALIDATION` to skip env validation.
- * This is especially useful for Docker builds.
+ * Run `build` or `dev` with `SKIP_ENV_VALIDATION` to skip env validation. This is especially useful
+ * for Docker builds.
  */
-!process.env.SKIP_ENV_VALIDATION && (await import("./src/env.mjs"));
+await import("./src/env.mjs");
 
 /** @type {import("next").NextConfig} */
 const config = {
   reactStrictMode: true,
 
   /**
-   * If you have the "experimental: { appDir: true }" setting enabled, then you
-   * must comment the below `i18n` config out.
+   * If you have `experimental: { appDir: true }` set, then you must comment the below `i18n` config
+   * out.
    *
    * @see https://github.com/vercel/next.js/issues/41980
    */
diff --git a/package.json b/package.json
index 50d9331..8c3203e 100644
--- a/package.json
+++ b/package.json
@@ -1,5 +1,5 @@
 {
-  "name": "current",
+  "name": "upgrade",
   "version": "0.1.0",
   "private": true,
   "scripts": {
@@ -33,11 +33,11 @@
     "eslint-config-next": "^13.2.4",
     "postcss": "^8.4.21",
     "prettier": "^2.8.6",
-    "prettier-plugin-tailwindcss": "^0.2.5",
-    "tailwindcss": "^3.2.7",
+    "prettier-plugin-tailwindcss": "^0.2.6",
+    "tailwindcss": "^3.3.0",
     "typescript": "^5.0.2"
   },
   "ct3aMetadata": {
-    "initVersion": "7.10.0"
+    "initVersion": "7.12.0"
   }
 }
diff --git a/src/env.mjs b/src/env.mjs
index 38e38da..23a5693 100644
--- a/src/env.mjs
+++ b/src/env.mjs
@@ -12,9 +12,13 @@ const server = z.object({
  * Specify your client-side environment variables schema here. This way you can ensure the app isn't
  * built with invalid env vars. To expose them to the client, prefix them with `NEXT_PUBLIC_`.
  */
-const client = z.object({
-  // NEXT_PUBLIC_CLIENTVAR: z.string().min(1),
-});
+const client = z.object(
+  /** @satisfies {Record<`NEXT_PUBLIC_${string}`, import('zod').ZodType>} */ (
+    {
+      // NEXT_PUBLIC_CLIENTVAR: z.string().min(1),
+    }
+  ),
+);
 
 /**
  * You can't destruct `process.env` as a regular object in the Next.js edge runtimes (e.g.
@@ -38,7 +42,11 @@ const merged = server.merge(client);
 
 let env = /** @type {MergedOutput} */ (process.env);
 
-if (!!process.env.SKIP_ENV_VALIDATION == false) {
+const skip =
+  !!process.env.SKIP_ENV_VALIDATION &&
+  process.env.SKIP_ENV_VALIDATION !== "false" &&
+  process.env.SKIP_ENV_VALIDATION !== "0";
+if (!skip) {
   const isServer = typeof window === "undefined";
 
   const parsed = /** @type {MergedSafeParseReturn} */ (
diff --git a/tailwind.config.cjs b/tailwind.config.ts
similarity index 50%
rename from tailwind.config.cjs
rename to tailwind.config.ts
index a82e7e9..d4d3fa2 100644
--- a/tailwind.config.cjs
+++ b/tailwind.config.ts
@@ -1,10 +1,9 @@
-/** @type {import('tailwindcss').Config} */
-const config = {
+import { type Config } from "tailwindcss";
+
+export default {
   content: ["./src/**/*.{js,ts,jsx,tsx}"],
   theme: {
     extend: {},
   },
   plugins: [],
-};
-
-module.exports = config;
+} satisfies Config;
